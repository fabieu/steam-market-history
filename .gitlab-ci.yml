workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "api"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

stages:
  - prepare
  - test
  - publish
  - release

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

default:
  image: python:3.10.6-slim
  tags:
    - gitlab-org-docker
  cache:
    paths:
      - .cache/pip

prepare environment:
  stage: prepare
  before_script:
    - pip install poetry
  script:
    - echo "Expanding version as environment variable"
    - echo "VERSION=$(poetry version -s)" > .env
    - cat .env
  artifacts:
    reports:
      dotenv: .env

test-job:
  stage: test
    before_script:
    - pip install poetry
    - poetry install
  script:
    - echo "Running unit tests..."
    - poetry run pytest --junitxml="report.xml"
  artifacts:
    when: always
    paths:
      - report.xml
    reports:
      junit: report.xml
    expire_in: 1 week

publish-job:
  stage: publish
  before_script:
    - pip install poetry
    - poetry install
  script:
    - echo "Publishing application..."
    - poetry publish --build --no-interaction --username __token__ --password $PYPI_TOKEN
    - echo "Application successfully published."

create release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo 'Creating release for version $VERSION'
  release:
    name: "Release $VERSION"
    tag_name: "$VERSION"
    description: "$CI_COMMIT_MESSAGE"
    ref: "$CI_COMMIT_SHA"
  allow_failure: true
